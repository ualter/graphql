type Borrower {
    id: ID!
    eyeColor: String!
    name: String!
    gender: String!
    age: Int!
    company: String!
    email: String!
    phone: String!
    address: String!
    registered: String!
}


type Query {
    findAllBorrowers: [Borrower]!
    countBorrowers: Long!
}

type Mutation {
    newBorrower(eyeColor: String!, name: String!, gender: String!) : Borrower!
    deleteBorrower(id: ID!) : Boolean!
}